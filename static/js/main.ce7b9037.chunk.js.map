{"version":3,"sources":["components/Menu/Menu.tsx","components/Navbar/Navbar.tsx","components/Home/Home.tsx","components/Banner/Banner.tsx","components/Menu/TakeoutMenu.tsx","components/Contact/Contact.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Languages","Navbar","useState","open","setOpen","navbarRef","useRef","useEffect","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","ref","className","onClick","icon","faBars","size","navbar","map","item","index","key","to","route","name","Home","home","zh","en","toUpperCase","address","href","phone","display","Banner","props","dismissed","setDismissed","tooltipHidden","setTooltipHidden","message","tooltipMessages","toggleTooltip","onMouseEnter","onMouseLeave","faInfoCircle","Menu","ENGLISH","language","menu","categories","activeCategory","setActiveCategory","sliderRef","scroll","amount","scrollTo","left","scrollLeft","behavior","delivery","discounts","faChevronLeft","category","style","backgroundImage","image","backgroundPosition","backgroundSize","backgroundRepeat","faChevronRight","description","items","number","price","TakeoutMenu","some","Array","isArray","p","entrees","entree","Contact","googleMapRef","googleMap","marker","restaurantLocation","lat","lng","googleMapScript","createElement","src","process","window","body","appendChild","google","maps","Map","zoom","center","disableDefaultUI","Marker","position","contact","location","split","line","label","hours","day","App","basename","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ce7b9037.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport Banner from '../Banner/Banner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport menu from './menu.json';\nimport './Menu.css';\n\ninterface ICategory {\n  name: IMultiLanguageString;\n  image: string;\n  items: IItem[];\n  description?: IMultiLanguageString;\n}\n\ninterface IMultiLanguageString {\n  en: string;\n  zh: string;\n  vi: string;\n}\n\ninterface IItem {\n  number: string;\n  name: IMultiLanguageString;\n  price: string;\n}\n\nenum Languages {\n  ENGLISH = 'en',\n  CHINESE = 'zh',\n  VIETNAMESE = 'vi',\n}\n\nconst Menu = () => {\n  const [language /*, setLanguage*/] = useState(Languages.ENGLISH);\n  const [activeCategory, setActiveCategory] = useState<ICategory>(\n    menu.categories[0]\n  );\n  const sliderRef = useRef<HTMLDivElement>(null);\n\n  const scroll = (amount: number) =>\n    sliderRef.current?.scrollTo({\n      left: sliderRef.current.scrollLeft + amount,\n      behavior: 'smooth',\n    });\n\n  return (\n    <div className=\"menu\">\n      <Banner message={menu.delivery} tooltipMessages={menu.discounts} />\n      <div className=\"slider-container\">\n        <div className=\"left\" onClick={() => scroll(-500)}>\n          <FontAwesomeIcon icon={faChevronLeft} size=\"lg\" />\n        </div>\n        <div ref={sliderRef} className=\"slider\">\n          {menu.categories.map((category: ICategory) => (\n            <div\n              key={category.name[language]}\n              className=\"category\"\n              style={{\n                backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${category.image})`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n              }}\n              onClick={() => setActiveCategory(category)}\n            >\n              {category.name[language]}\n            </div>\n          ))}\n        </div>\n        <div className=\"right\" onClick={() => scroll(500)}>\n          <FontAwesomeIcon icon={faChevronRight} size=\"lg\" />\n        </div>\n      </div>\n      <div className=\"active-category\">\n        <h1>{activeCategory.name[language]}</h1>\n        {activeCategory.description && (\n          <div className=\"description\">\n            {activeCategory.description[language]}\n          </div>\n        )}\n        <table>\n          <tbody>\n            {activeCategory.items.map(\n              ({ number, name, price }: IItem, index) => (\n                <tr key={index}>\n                  <td className=\"number\">{number}</td>\n                  <td className=\"name\">{name[language]}</td>\n                  <td className=\"price\">{price}</td>\n                </tr>\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport navbar from './navbar.json';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  const [open, setOpen] = useState(false);\n  const toggleOpen = () => setOpen(!open);\n  const navbarRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClick = (e: MouseEvent) => {\n      if (navbarRef.current && !navbarRef.current.contains(e.target as Node)) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, []);\n\n  return (\n    <div ref={navbarRef} className={`navbar ${open && 'open'}`}>\n      <button className=\"hamburger\" onClick={toggleOpen}>\n        <FontAwesomeIcon icon={faBars} size=\"3x\" />\n      </button>\n      {navbar.map((item, index) => (\n        <Link key={index} to={item.route}>\n          <div className={`nav-item ${open && 'open'}`}>{item.name}</div>\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport home from './home.json';\nimport './Home.css';\n\nconst Home = () => (\n  <div className=\"home\">\n    <div className=\"center\">\n      <span className=\"name\">{home.name.zh}</span>\n      <span className=\"name\">{home.name.en.toUpperCase()}</span>\n      <div className=\"contact-info\">\n        <span>{home.address.toUpperCase()}</span>\n        <a href={`tel:${home.phone.href}`}>{home.phone.display}</a>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport './Banner.css';\n\ninterface IProps {\n  message: string;\n  tooltipMessages: string[];\n}\n\nconst Banner = (props: IProps) => {\n  const [dismissed, setDismissed] = useState(false);\n  const [tooltipHidden, setTooltipHidden] = useState(true);\n  const { message, tooltipMessages } = props;\n\n  const toggleTooltip = () => setTooltipHidden(!tooltipHidden);\n\n  return (\n    <div className={`banner ${dismissed && 'dismissed'}`}>\n      <div onMouseEnter={toggleTooltip} onMouseLeave={toggleTooltip}>\n        <FontAwesomeIcon icon={faInfoCircle} />\n        <div className={`tooltip ${tooltipHidden && 'hidden'}`}>\n          {tooltipMessages.map((message, index) => (\n            <li key={index}>{message}</li>\n          ))}\n        </div>\n      </div>\n      <div className=\"message\">{message}</div>\n      <div className=\"close\" onClick={() => setDismissed(true)}>\n        ✕\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React, { useState, useRef } from 'react';\nimport Banner from '../Banner/Banner';\nimport menu from './takeout-menu.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport './Menu.css';\n\ninterface ICategory {\n  name: string;\n  image: string;\n  items: IItem[];\n  entrees?: IEntree[];\n}\n\ninterface IEntree {\n  number: string;\n  name: string;\n}\n\ninterface IItem {\n  number?: string;\n  name: string;\n  description?: string;\n  price: string | string[];\n}\n\nconst TakeoutMenu = () => {\n  const [activeCategory, setActiveCategory] = useState<ICategory>(\n    menu.categories[0]\n  );\n  const sliderRef = useRef<HTMLDivElement>(null);\n\n  const scroll = (amount: number) =>\n    sliderRef.current?.scrollTo({\n      left: sliderRef.current.scrollLeft + amount,\n      behavior: 'smooth',\n    });\n\n  return (\n    <div className=\"menu\">\n      <Banner message={menu.delivery} tooltipMessages={menu.discounts}></Banner>\n      <div className=\"slider-container\">\n        <div className=\"left\" onClick={() => scroll(-300)}>\n          <FontAwesomeIcon icon={faChevronLeft} size=\"lg\" />\n        </div>\n        <div ref={sliderRef} className=\"slider\">\n          {menu.categories.map((category: ICategory, index) => (\n            <div\n              key={index}\n              className=\"category\"\n              style={{\n                backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${category.image})`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n              }}\n              onClick={() => setActiveCategory(category)}\n            >\n              {category.name}\n            </div>\n          ))}\n        </div>\n        <div className=\"right\" onClick={() => scroll(300)}>\n          <FontAwesomeIcon icon={faChevronRight} size=\"lg\" />\n        </div>\n      </div>\n      <div className=\"active-category\">\n        <h1>{activeCategory.name}</h1>\n        <table>\n          <tbody>\n            {activeCategory.items.some((item) => Array.isArray(item.price)) && (\n              <tr>\n                <th></th>\n                <th></th>\n                <th>Small</th>\n                <th>Large</th>\n              </tr>\n            )}\n            {activeCategory.items.map((item: IItem, index) => (\n              <tr key={index}>\n                {item.number && <td className=\"number\">{item.number}</td>}\n                <td className=\"name\">\n                  <div>\n                    <div>{item.name}</div>\n                    <div className=\"description\">{item.description}</div>\n                  </div>\n                </td>\n                {Array.isArray(item.price) ? (\n                  item.price.map((p, index) => <td key={index}>{p}</td>)\n                ) : (\n                  <td className=\"price\">{item.price}</td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {activeCategory.name === 'Dinner Specials' && (\n          <>\n            <h1>Entrées</h1>\n            <table>\n              <tbody>\n                {activeCategory.entrees?.map((entree: IEntree, index) => (\n                  <tr key={index}>\n                    <td>{entree.number}</td>\n                    <td>{entree.name}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TakeoutMenu;\n","import React, { useRef, useEffect } from 'react';\nimport contact from './contact.json';\nimport './Contact.css';\n\ndeclare global {\n  interface Window {\n    google: typeof google;\n  }\n}\n\ninterface Location {\n  lat: number;\n  lng: number;\n}\n\nconst GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\n\nconst Contact = () => {\n  let googleMapRef = useRef<HTMLDivElement>(null);\n  let googleMap = useRef<google.maps.Map>();\n  let marker = useRef<google.maps.Marker>();\n\n  useEffect(() => {\n    const restaurantLocation: Location = { lat: 51.098501, lng: -113.962162 };\n    const createGoogleMap = () =>\n      new window.google.maps.Map(googleMapRef.current as Element, {\n        zoom: 16,\n        center: restaurantLocation,\n        disableDefaultUI: true,\n      });\n\n    const createMarker = () =>\n      new window.google.maps.Marker({\n        position: restaurantLocation,\n        map: googleMap.current,\n      });\n\n    const googleMapScript = document.createElement('script');\n\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAP_API_KEY}`;\n    window.document.body.appendChild(googleMapScript);\n\n    googleMapScript.addEventListener('load', () => {\n      googleMap.current = createGoogleMap();\n      marker.current = createMarker();\n    });\n  }, []);\n\n  return (\n    <div className=\"contact\">\n      <h2>CONTACT US</h2>\n      <div className=\"desktop\">\n        <div className=\"google-map\" ref={googleMapRef} />\n        <div className=\"contact-info\">\n          <div className=\"section\">\n            <h3>LOCATION</h3>\n            <a href={contact.location.href}>\n              {contact.location.address.split(',').map((line, index) => (\n                <span key={index} className=\"address\">\n                  {line}\n                </span>\n              ))}\n            </a>\n          </div>\n          <div className=\"section\">\n            <h3>PHONE</h3>\n            <a href={contact.phone.href}>{contact.phone.label}</a>\n          </div>\n          <div className=\"section\">\n            <h3>HOURS</h3>\n            <div className=\"times\">\n              <ul className=\"days\">\n                {contact.hours.map((item, index) => (\n                  <li key={index}>{item.day}</li>\n                ))}\n              </ul>\n              <ul className=\"hours\">\n                {contact.hours.map((item, index) => (\n                  <li key={index}>{item.hours}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport Menu from './components/Menu/Menu';\nimport TakeoutMenu from './components/Menu/TakeoutMenu';\nimport Contact from './components/Contact/Contact';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename=\"/Emerald-Palace/\">\n      <div className=\"app\">\n        <Navbar />\n        <div className=\"main\">\n          <Switch>\n            <Route path=\"/menu\">\n              <Menu />\n            </Route>\n            <Route path=\"/takeout-menu\">\n              <TakeoutMenu />\n            </Route>\n            <Route path=\"/contact\">\n              <Contact />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}