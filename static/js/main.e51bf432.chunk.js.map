{"version":3,"sources":["types/types.ts","components/Navbar/Navbar.tsx","components/Home/Home.tsx","components/Banner/Banner.tsx","components/Menu/Menu.tsx","components/Menu/TakeoutMenu.tsx","components/Contact/Contact.tsx","FirebaseHelper.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Languages","Navbar","useState","open","setOpen","navbarRef","useRef","useEffect","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","ref","className","onClick","icon","faBars","size","navbar","map","item","index","key","to","route","name","Home","props","restaurant","background","title","style","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","zh","en","toUpperCase","description","href","location","address","phone","label","Banner","tooltipHidden","setTooltipHidden","show","setShow","message","tooltipMessages","toggleTooltip","onMouseEnter","onMouseLeave","faInfoCircle","Menu","menu","pdf","images","ENGLISH","language","setLanguage","showBanner","setShowBanner","activeCategory","setActiveCategory","sliderRef","scroll","amount","scrollTo","left","scrollLeft","behavior","categories","delivery","discounts","CHINESE","VIETNAMESE","rel","faChevronLeft","category","image","faChevronRight","items","number","price","TakeoutMenu","some","Array","isArray","p","entrees","entree","Contact","googleMapRef","googleMap","marker","restaurantLocation","lat","lng","createGoogleMap","window","google","maps","Map","zoom","center","disableDefaultUI","createMarker","Marker","position","googleMapScript","createElement","src","process","body","appendChild","removeChild","split","line","hours","day","FirebaseHelper","_storage","firebase","storage","_storageRef","this","getDownloadUrl","file","child","getDownloadURL","err","getJson","a","url","fetch","res","ok","json","statusText","App","ready","setReady","setMenu","menuPdfUrl","setMenuPdfUrl","setImages","takeoutMenu","setTakeoutMenu","takeoutMenuPdfUrl","setTakeoutMenuPdfUrl","setRestaurant","backgroundUrl","setBackgroundUrl","filePaths","fh","menuJson","console","error","menuPdf","takeoutMenuJson","takeoutMenuPdf","restaurantJson","getAllFiles","getImagesFromMenuJson","updateImageMap","imageUrl","prev","forEach","basename","path","Boolean","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e51bf432.chunk.js","sourcesContent":["export interface ICategory {\n  name: string | IMultiLanguageString;\n  image: string;\n  items: IItem[];\n  entrees?: IEntree[];\n  description?: IMultiLanguageString;\n}\n\nexport interface IEntree {\n  number: string;\n  name: string;\n}\n\nexport interface IItem {\n  number?: string;\n  name: string | IMultiLanguageString;\n  description?: string;\n  price: string | string[];\n}\n\nexport interface IMenu {\n  delivery: string;\n  discounts: string[];\n  categories: ICategory[];\n}\n\nexport interface IRestaurant {\n  name: IMultiLanguageString;\n  description: string;\n  location: { address: string; href: string };\n  phone: { label: string; href: string };\n  hours: { day: string; hours: string }[];\n}\n\nexport interface IMultiLanguageString {\n  en: string;\n  zh: string;\n  vi?: string;\n}\n\nexport enum Languages {\n  ENGLISH = 'en',\n  CHINESE = 'zh',\n  VIETNAMESE = 'vi',\n}\n\nexport interface Location {\n  lat: number;\n  lng: number;\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport navbar from './navbar.json';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  const [open, setOpen] = useState(false);\n  const toggleOpen = () => setOpen(!open);\n  const navbarRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClick = (e: UIEvent) => {\n      if (navbarRef.current && !navbarRef.current.contains(e.target as Node)) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClick);\n    document.addEventListener('touchstart', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n      document.removeEventListener('touchstart', handleClick);\n    };\n  }, []);\n\n  return (\n    <div ref={navbarRef} className={`navbar ${open && 'open'}`}>\n      <button className=\"hamburger\" onClick={toggleOpen}>\n        <FontAwesomeIcon icon={faBars} size=\"3x\" />\n      </button>\n      {navbar.map((item, index) => (\n        <Link key={index} to={item.route}>\n          <div className={`nav-item ${open && 'open'}`}>{item.name}</div>\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useEffect } from 'react';\nimport './Home.css';\nimport { IRestaurant } from '../../types/types';\n\nconst Home = (props: { restaurant?: IRestaurant; background?: string }) => {\n  const { restaurant, background } = props;\n\n  useEffect(() => {\n    document.title = 'Emerald Palace';\n  }, []);\n\n  return (\n    <div\n      className=\"home\"\n      style={{\n        backgroundImage: `linear-gradient(rgba(150, 180, 150, 0.9), rgba(150, 180, 150, 0.9)), url(${background})`,\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n      }}\n    >\n      <div className=\"center\">\n        <div className=\"logo\">\n          <span>{restaurant?.name.zh}</span>\n        </div>\n        <span className=\"name\">{restaurant?.name.en.toUpperCase()}</span>\n        <span className=\"description\">\n          {restaurant?.description.toUpperCase()}\n        </span>\n        <div className=\"contact-info\">\n          <a\n            href={`https://maps.google.com/?q=${restaurant?.location.address}`}\n          >\n            {restaurant?.location.address.toUpperCase()}\n          </a>\n          <a href={`tel:${restaurant?.phone.href}`}>\n            {restaurant?.phone.label}\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport './Banner.css';\n\ninterface IProps {\n  show: boolean;\n  setShow: Dispatch<SetStateAction<boolean>>;\n  message?: string;\n  tooltipMessages?: string[];\n}\n\nconst Banner = (props: IProps) => {\n  const [tooltipHidden, setTooltipHidden] = useState(true);\n  const { show, setShow, message, tooltipMessages } = props;\n\n  const toggleTooltip = () => setTooltipHidden(!tooltipHidden);\n\n  return message ? (\n    <div className={`banner ${!show && 'dismissed'}`}>\n      <div onMouseEnter={toggleTooltip} onMouseLeave={toggleTooltip}>\n        <FontAwesomeIcon icon={faInfoCircle} />\n        <div className={`tooltip ${tooltipHidden && 'hidden'}`}>\n          {tooltipMessages?.map((message, index) => (\n            <li key={index}>{message}</li>\n          ))}\n        </div>\n      </div>\n      <div className=\"message\">{message}</div>\n      <div className=\"close\" onClick={() => setShow(false)}>\n        ✕\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default Banner;\n","import React, { useState, useRef, useEffect } from 'react';\nimport Banner from '../Banner/Banner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  ICategory,\n  IItem,\n  IMenu,\n  IMultiLanguageString,\n  Languages,\n} from '../../types/types';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport './Menu.css';\n\nconst Menu = (props: {\n  menu?: IMenu;\n  pdf?: string;\n  images?: { [key: string]: string };\n}) => {\n  const { menu, pdf, images } = props;\n  const [language, setLanguage] = useState(Languages.ENGLISH);\n  const [showBanner, setShowBanner] = useState(true);\n  const [activeCategory, setActiveCategory] = useState<ICategory>();\n  const sliderRef = useRef<HTMLDivElement>(null);\n\n  const scroll = (amount: number) =>\n    sliderRef.current?.scrollTo({\n      left: sliderRef.current.scrollLeft + amount,\n      behavior: 'smooth',\n    });\n\n  useEffect(() => {\n    setActiveCategory(menu?.categories[0]);\n  }, [menu]);\n\n  useEffect(() => {\n    document.title = 'Menu | Emerald Palace';\n  }, []);\n\n  return (\n    <div className={`menu ${showBanner && 'lower'}`}>\n      <Banner\n        show={showBanner}\n        setShow={setShowBanner}\n        message={menu?.delivery}\n        tooltipMessages={menu?.discounts}\n      />\n      <div className=\"options\">\n        <button\n          className={`${language === Languages.ENGLISH && 'active'}`}\n          onClick={() => setLanguage(Languages.ENGLISH)}\n        >\n          English\n        </button>\n        <button\n          className={`${language === Languages.CHINESE && 'active'}`}\n          onClick={() => setLanguage(Languages.CHINESE)}\n        >\n          繁體中文\n        </button>\n        <button\n          className={`${language === Languages.VIETNAMESE && 'active'}`}\n          onClick={() => setLanguage(Languages.VIETNAMESE)}\n        >\n          Tiếng Việt\n        </button>\n        <div className=\"separator\"></div>\n        <a href={pdf} target=\"_blank\" rel=\"noopener noreferrer\">\n          <button>PDF Version</button>\n        </a>\n      </div>\n      <div className=\"slider-container\">\n        <div className=\"left\" onClick={() => scroll(-500)}>\n          <FontAwesomeIcon icon={faChevronLeft} size=\"lg\" />\n        </div>\n        <div ref={sliderRef} className=\"slider\">\n          {menu?.categories.map((category: ICategory, index) => {\n            return (\n              <div\n                key={index}\n                className=\"category\"\n                style={{\n                  backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${\n                    images?.[category.image]\n                  })`,\n                  backgroundPosition: 'center',\n                  backgroundSize: 'cover',\n                  backgroundRepeat: 'no-repeat',\n                }}\n                onClick={() => setActiveCategory(category)}\n              >\n                <span>{(category.name as IMultiLanguageString)[language]}</span>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"right\" onClick={() => scroll(500)}>\n          <FontAwesomeIcon icon={faChevronRight} size=\"lg\" />\n        </div>\n      </div>\n      <div className=\"active-category\">\n        <div className=\"flex row\">\n          {activeCategory && (\n            <h1>{(activeCategory?.name as IMultiLanguageString)[language]}</h1>\n          )}\n        </div>\n        {activeCategory?.description && (\n          <div className=\"description\">\n            <span>{activeCategory?.description[language]}</span>\n          </div>\n        )}\n        <table>\n          <tbody>\n            {activeCategory?.items.map(\n              ({ number, name, price }: IItem, index) => (\n                <tr key={index}>\n                  <td className=\"number\">{number}</td>\n                  <td className=\"name\">\n                    <span>{(name as IMultiLanguageString)[language]}</span>\n                  </td>\n                  <td className=\"price\">{price}</td>\n                </tr>\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { useState, useRef, useEffect } from 'react';\nimport Banner from '../Banner/Banner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ICategory, IEntree, IItem, IMenu } from '../../types/types';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport './Menu.css';\n\nconst TakeoutMenu = (props: {\n  menu?: IMenu;\n  pdf?: string;\n  images?: { [key: string]: string };\n}) => {\n  const { menu, pdf, images } = props;\n  const [showBanner, setShowBanner] = useState(true);\n  const [activeCategory, setActiveCategory] = useState<ICategory>();\n  const sliderRef = useRef<HTMLDivElement>(null);\n\n  const scroll = (amount: number) =>\n    sliderRef.current?.scrollTo({\n      left: sliderRef.current.scrollLeft + amount,\n      behavior: 'smooth',\n    });\n\n  useEffect(() => {\n    document.title = 'Takeout Menu | Emerald Palace';\n  }, []);\n\n  useEffect(() => {\n    setActiveCategory(menu?.categories[0]);\n  }, [menu]);\n\n  return (\n    <div className={`menu ${showBanner && 'lower'}`}>\n      <Banner\n        show={showBanner}\n        setShow={setShowBanner}\n        message={menu?.delivery}\n        tooltipMessages={menu?.discounts}\n      ></Banner>\n      <div className=\"options\">\n        <a href={pdf} target=\"_blank\" rel=\"noopener noreferrer\">\n          <button>PDF Version</button>\n        </a>\n      </div>\n      <div className=\"slider-container\">\n        <div className=\"left\" onClick={() => scroll(-300)}>\n          <FontAwesomeIcon icon={faChevronLeft} size=\"lg\" />\n        </div>\n        <div ref={sliderRef} className=\"slider\">\n          {menu?.categories.map((category: ICategory, index) => (\n            <div\n              key={index}\n              className=\"category\"\n              style={{\n                backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${\n                  images?.[category.image]\n                })`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n              }}\n              onClick={() => setActiveCategory(category)}\n            >\n              {category.name}\n            </div>\n          ))}\n        </div>\n        <div className=\"right\" onClick={() => scroll(300)}>\n          <FontAwesomeIcon icon={faChevronRight} size=\"lg\" />\n        </div>\n      </div>\n      <div className=\"active-category\">\n        <h1>{activeCategory?.name}</h1>\n        <table>\n          <tbody>\n            {activeCategory?.items.some((item) =>\n              Array.isArray(item.price)\n            ) && (\n              <tr>\n                <th></th>\n                <th></th>\n                <th>Small</th>\n                <th>Large</th>\n              </tr>\n            )}\n            {activeCategory?.items.map((item: IItem, index) => (\n              <tr key={index}>\n                {item.number && <td className=\"number\">{item.number}</td>}\n                <td className=\"name\">\n                  <div>\n                    <div>{item.name}</div>\n                    <div className=\"description\">{item.description}</div>\n                  </div>\n                </td>\n                {Array.isArray(item.price) ? (\n                  item.price.map((p, index) => <td key={index}>{p}</td>)\n                ) : (\n                  <td className=\"price\">{item.price}</td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {activeCategory?.name === 'Dinner Specials' && (\n          <>\n            <h1>Entrées</h1>\n            <table>\n              <tbody>\n                {activeCategory?.entrees?.map((entree: IEntree, index) => (\n                  <tr key={index}>\n                    <td>{entree.number}</td>\n                    <td>{entree.name}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TakeoutMenu;\n","import React, { useRef, useEffect } from 'react';\nimport './Contact.css';\nimport { Location } from '../../types/types';\nimport { IRestaurant } from '../../types/types';\n\ndeclare global {\n  interface Window {\n    google: typeof google;\n  }\n}\n\nconst GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\n\nconst Contact = (props: { restaurant?: IRestaurant }) => {\n  const { restaurant } = props;\n  let googleMapRef = useRef<HTMLDivElement>(null);\n  let googleMap = useRef<google.maps.Map>();\n  let marker = useRef<google.maps.Marker>();\n\n  useEffect(() => {\n    const restaurantLocation: Location = { lat: 51.098501, lng: -113.962162 };\n    const createGoogleMap = () =>\n      new window.google.maps.Map(googleMapRef.current as Element, {\n        zoom: 16,\n        center: restaurantLocation,\n        disableDefaultUI: true,\n      });\n\n    const createMarker = () =>\n      new window.google.maps.Marker({\n        position: restaurantLocation,\n        map: googleMap.current,\n      });\n\n    const googleMapScript = document.createElement('script');\n\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAP_API_KEY}`;\n    window.document.body.appendChild(googleMapScript);\n\n    googleMapScript.addEventListener('load', () => {\n      googleMap.current = createGoogleMap();\n      marker.current = createMarker();\n    });\n\n    return () => {\n      window.document.body.removeChild(googleMapScript);\n      googleMapScript.removeEventListener('load', () => {\n        googleMap.current = createGoogleMap();\n        marker.current = createMarker();\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    document.title = 'Contact | Emerald Palace';\n  }, []);\n\n  return (\n    <div className=\"contact\">\n      <h2>CONTACT US</h2>\n      <div className=\"desktop\">\n        <div className=\"google-map\" ref={googleMapRef} />\n        <div className=\"contact-info\">\n          <div className=\"section\">\n            <h3>LOCATION</h3>\n            <a href={restaurant?.location.href}>\n              {restaurant?.location.address.split(',').map((line, index) => (\n                <span key={index} className=\"address\">\n                  {line}\n                </span>\n              ))}\n            </a>\n          </div>\n          <div className=\"section\">\n            <h3>PHONE</h3>\n            <a href={restaurant?.phone.href}>{restaurant?.phone.label}</a>\n          </div>\n          <div className=\"section\">\n            <h3>HOURS</h3>\n            <div className=\"times\">\n              <ul className=\"days\">\n                {restaurant?.hours.map((item, index) => (\n                  <li key={index}>{item.day}</li>\n                ))}\n              </ul>\n              <ul className=\"hours\">\n                {restaurant?.hours.map((item, index) => (\n                  <li key={index}>{item.hours}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import firebase from '@firebase/app';\nimport '@firebase/storage';\n\nexport default class FirebaseHelper {\n  private _storage = firebase.storage!();\n  private _storageRef = this._storage.ref();\n\n  public getDownloadUrl = (file: string) => {\n    try {\n      return this._storageRef.child(file).getDownloadURL();\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  public getJson = async (file: string) => {\n    try {\n      const url = await this.getDownloadUrl(file);\n      const res = await fetch(url);\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    } catch (err) {\n      throw err;\n    }\n  };\n}\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport Menu from './components/Menu/Menu';\nimport TakeoutMenu from './components/Menu/TakeoutMenu';\nimport Contact from './components/Contact/Contact';\nimport './App.css';\nimport FirebaseHelper from './FirebaseHelper';\nimport { IMenu, IRestaurant, ICategory } from './types/types';\n\nfunction App() {\n  const [ready, setReady] = useState(false);\n  const [menu, setMenu] = useState<IMenu>();\n  const [menuPdfUrl, setMenuPdfUrl] = useState<string>();\n  const [images, setImages] = useState<{ [key: string]: string }>({});\n  const [takeoutMenu, setTakeoutMenu] = useState<IMenu>();\n  const [takeoutMenuPdfUrl, setTakeoutMenuPdfUrl] = useState<string>();\n  const [restaurant, setRestaurant] = useState<IRestaurant>();\n  const [backgroundUrl, setBackgroundUrl] = useState<string>();\n\n  useEffect(() => {\n    const filePaths = {\n      menuJson: 'menu.json',\n      menuPdf: 'pdfs/traditional-menu.pdf',\n      takeoutMenuJson: 'takeout-menu.json',\n      takeoutMenuPdf: 'pdfs/takeout-menu.pdf',\n      restaurantJson: 'restaurant.json',\n      backgroundImage: 'images/background.jpg',\n    };\n\n    const getAllFiles = async () => {\n      const fh = new FirebaseHelper();\n      try {\n        const menuJson = await fh.getJson(filePaths.menuJson);\n        setMenu(menuJson);\n      } catch (err) {\n        console.error(err);\n      }\n      try {\n        const menuPdf = await fh.getDownloadUrl(filePaths.menuPdf);\n        setMenuPdfUrl(menuPdf);\n      } catch (err) {\n        console.error(err);\n      }\n      try {\n        const takeoutMenuJson = await fh.getJson(filePaths.takeoutMenuJson);\n        setTakeoutMenu(takeoutMenuJson);\n      } catch (err) {\n        console.error(err);\n      }\n      try {\n        const takeoutMenuPdf = await fh.getDownloadUrl(\n          filePaths.takeoutMenuPdf\n        );\n        setTakeoutMenuPdfUrl(takeoutMenuPdf);\n      } catch (err) {\n        console.error(err);\n      }\n      try {\n        const restaurantJson = await fh.getJson(filePaths.restaurantJson);\n        setRestaurant(restaurantJson);\n      } catch (err) {\n        console.error(err);\n      }\n      try {\n        const background = await fh.getDownloadUrl(filePaths.backgroundImage);\n        setBackgroundUrl(background);\n      } catch (err) {\n        console.error(err);\n      }\n      setReady(true);\n    };\n    getAllFiles();\n  }, []);\n\n  useEffect(() => {\n    const getImagesFromMenuJson = async () => {\n      const fh = new FirebaseHelper();\n      const updateImageMap = async (category: ICategory) => {\n        try {\n          const imageUrl = await fh.getDownloadUrl(category.image);\n          setImages((prev) => {\n            return { ...prev, [category.image]: imageUrl };\n          });\n        } catch (err) {\n          console.error(err);\n        }\n      };\n      menu?.categories.forEach(updateImageMap);\n      takeoutMenu?.categories.forEach(updateImageMap);\n    };\n    try {\n      getImagesFromMenuJson();\n    } catch (err) {\n      console.error(err);\n    }\n  }, [menu, takeoutMenu]);\n\n  return (\n    <Router basename=\"/Emerald-Palace/\">\n      {ready && (\n        <div className=\"app\">\n          <Navbar />\n          <div className=\"main\">\n            <Switch>\n              <Route path=\"/menu\">\n                <Menu menu={menu} pdf={menuPdfUrl} images={images} />\n              </Route>\n              <Route path=\"/takeout-menu\">\n                <TakeoutMenu\n                  menu={takeoutMenu}\n                  pdf={takeoutMenuPdfUrl}\n                  images={images}\n                />\n              </Route>\n              <Route path=\"/contact\">\n                <Contact restaurant={restaurant} />\n              </Route>\n              <Route path=\"/\">\n                <Home restaurant={restaurant} background={backgroundUrl} />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from '@firebase/app';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBjW99VqW_fOjdU_FYF4LTKtGjVwMHL_D4',\n  authDomain: 'emerald-palace.firebaseapp.com',\n  databaseURL: 'https://emerald-palace.firebaseio.com',\n  projectId: 'emerald-palace',\n  storageBucket: 'emerald-palace.appspot.com',\n  messagingSenderId: '191665058142',\n  appId: '1:191665058142:web:37ced95f2e8fddad925fcf',\n  measurementId: 'G-M7NVVWXQD9',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}