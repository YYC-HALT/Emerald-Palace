{"version":3,"sources":["types/types.ts","components/Navbar/Navbar.tsx","components/Home/Home.tsx","components/Banner/Banner.tsx","components/Menu/Menu.tsx","components/Menu/TakeoutMenu.tsx","components/Contact/Contact.tsx","FirebaseHelper.ts","components/Loading/Loading.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Languages","Navbar","useState","open","setOpen","navbarRef","useRef","useEffect","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","ref","className","onClick","icon","faBars","size","navbar","map","item","index","key","to","route","name","Home","props","restaurant","background","title","style","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","zh","en","toUpperCase","description","href","location","address","phone","label","BannerItem","note","Banner","discounts","icons","delivery","faCar","cash","faMoneyBillAlt","card","faCreditCard","discount","Menu","menu","pdf","images","ENGLISH","language","setLanguage","showBannerOnMobile","setShowBannerOnMobile","LanguageToggle","identifier","CHINESE","VIETNAMESE","rel","faExternalLinkAlt","categories","category","toLowerCase","image","id","items","number","price","TakeoutMenu","p","entrees","entree","Contact","googleMapRef","googleMap","marker","restaurantLocation","lat","lng","createGoogleMap","window","google","maps","Map","zoom","center","disableDefaultUI","createMarker","Marker","position","googleMapScript","createElement","src","process","body","appendChild","removeChild","faMapPin","faPhone","faClock","hours","day","FirebaseHelper","_storage","firebase","storage","_storageRef","this","getDownloadUrl","file","child","getDownloadURL","err","getJson","a","url","fetch","res","ok","json","statusText","Loading","faCircleNotch","App","ready","setReady","setMenu","menuPdfUrl","setMenuPdfUrl","setImages","takeoutMenu","setTakeoutMenu","takeoutMenuPdfUrl","setTakeoutMenuPdfUrl","setRestaurant","backgroundUrl","setBackgroundUrl","filePaths","fh","menuJson","console","error","menuPdf","takeoutMenuJson","takeoutMenuPdf","restaurantJson","getAllFiles","getImagesFromMenuJson","updateImageMap","imageUrl","prev","forEach","path","Boolean","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.08afca3a.chunk.js","sourcesContent":["export interface ICategory {\n  name: string | IMultiLanguageString;\n  image: string;\n  items: IItem[];\n  entrees?: IEntree[];\n  description?: IMultiLanguageString;\n}\n\nexport interface IEntree {\n  number: string;\n  name: string;\n}\n\nexport interface IItem {\n  number?: string;\n  name: string | IMultiLanguageString;\n  description?: string;\n  price: string | string[];\n}\n\nexport interface IDiscount {\n  name: string;\n  description: string;\n  note?: string;\n}\n\nexport interface IMenu {\n  discounts: IDiscount[];\n  categories: ICategory[];\n}\n\nexport interface IRestaurant {\n  name: IMultiLanguageString;\n  description: string;\n  location: { address: string; href: string };\n  phone: { label: string; href: string };\n  hours: { day: string; hours: string }[];\n}\n\nexport interface IMultiLanguageString {\n  en: string;\n  zh: string;\n  vi?: string;\n}\n\nexport enum Languages {\n  ENGLISH = 'en',\n  CHINESE = 'zh',\n  VIETNAMESE = 'vi',\n}\n\nexport interface Location {\n  lat: number;\n  lng: number;\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport navbar from './navbar.json';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  const [open, setOpen] = useState(false);\n  const toggleOpen = () => setOpen(!open);\n  const navbarRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClick = (e: UIEvent) => {\n      if (navbarRef.current && !navbarRef.current.contains(e.target as Node)) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClick);\n    document.addEventListener('touchstart', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n      document.removeEventListener('touchstart', handleClick);\n    };\n  }, []);\n\n  return (\n    <div ref={navbarRef} className={`navbar ${open && 'open'}`}>\n      <button className=\"hamburger\" onClick={toggleOpen}>\n        <FontAwesomeIcon icon={faBars} size=\"3x\" />\n      </button>\n      {navbar.map((item, index) => (\n        <Link key={index} to={item.route}>\n          <div className={`nav-item ${open && 'open'}`}>{item.name}</div>\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useEffect } from 'react';\nimport './Home.css';\nimport { IRestaurant } from '../../types/types';\n\nconst Home = (props: { restaurant?: IRestaurant; background?: string }) => {\n  const { restaurant, background } = props;\n\n  useEffect(() => {\n    document.title = 'Emerald Palace';\n  }, []);\n\n  return (\n    <div\n      className=\"home\"\n      style={{\n        backgroundImage: `linear-gradient(rgba(150, 180, 150, 0.9), rgba(150, 180, 150, 0.9)), url(${background})`,\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n      }}\n    >\n      <div className=\"center\">\n        <div className=\"logo\">\n          <span>{restaurant?.name.zh}</span>\n        </div>\n        <span className=\"name\">{restaurant?.name.en.toUpperCase()}</span>\n        <span className=\"description\">\n          {restaurant?.description.toUpperCase()}\n        </span>\n        <div className=\"contact-info\">\n          <a\n            href={`https://maps.google.com/?q=${restaurant?.location.address}`}\n          >\n            {restaurant?.location.address.toUpperCase()}\n          </a>\n          <a href={`tel:${restaurant?.phone.href}`}>\n            {restaurant?.phone.label}\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCar,\n  faMoneyBillAlt,\n  faCreditCard,\n  IconDefinition,\n} from '@fortawesome/free-solid-svg-icons';\nimport './Banner.css';\nimport { IDiscount } from '../../types/types';\n\ninterface IProps {\n  className?: string;\n  discounts?: IDiscount[];\n}\n\nconst Banner = (props: IProps) => {\n  const { className, discounts } = props;\n  const icons: { [key: string]: IconDefinition } = {\n    delivery: faCar,\n    cash: faMoneyBillAlt,\n    card: faCreditCard,\n  };\n\n  return (\n    <div className={`banner ${className}`}>\n      {discounts?.map((discount, index) => (\n        <BannerItem\n          key={index}\n          description={discount.description}\n          icon={icons[discount.name]}\n          note={discount.note}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst BannerItem = ({\n  icon,\n  description,\n  note,\n}: {\n  icon: IconDefinition;\n  description?: string;\n  note?: string;\n}) => (\n  <div>\n    <div>\n      <FontAwesomeIcon icon={icon} /> {description}\n    </div>\n    {note && <div className=\"note\">{`*${note}`}</div>}\n  </div>\n);\n\nexport default Banner;\n","import React, { useState, useEffect } from 'react';\nimport Banner from '../Banner/Banner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  ICategory,\n  IMenu,\n  IMultiLanguageString,\n  Languages,\n} from '../../types/types';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport './Menu.css';\n\nconst Menu = (props: {\n  menu?: IMenu;\n  pdf?: string;\n  images?: { [key: string]: string };\n}) => {\n  const { menu, pdf, images } = props;\n  const [language, setLanguage] = useState(Languages.ENGLISH);\n  const [showBannerOnMobile, setShowBannerOnMobile] = useState(false);\n\n  useEffect(() => {\n    document.title = 'Menu | Emerald Palace';\n  }, []);\n\n  interface ILanguageToggle {\n    label: string;\n    identifier: Languages;\n  }\n\n  const LanguageToggle = ({ label, identifier }: ILanguageToggle) => (\n    <button\n      className={`language-toggle ${language === identifier && 'active'}`}\n      onClick={() => setLanguage(identifier)}\n    >\n      {label}\n    </button>\n  );\n\n  return (\n    <div className=\"menu\">\n      <Banner\n        className={showBannerOnMobile ? 'show' : ''}\n        discounts={menu?.discounts}\n      />\n      <div className=\"options\">\n        <button\n          className=\"deals-toggle\"\n          onClick={() => setShowBannerOnMobile(!showBannerOnMobile)}\n        >\n          Deals\n        </button>\n        <LanguageToggle label=\"English\" identifier={Languages.ENGLISH} />\n        <LanguageToggle label=\"繁體中文\" identifier={Languages.CHINESE} />\n        <LanguageToggle label=\"Tiếng Việt\" identifier={Languages.VIETNAMESE} />\n        <a href={pdf} target=\"_blank\" rel=\"noopener noreferrer\">\n          <button>\n            <FontAwesomeIcon icon={faExternalLinkAlt} /> PDF\n          </button>\n        </a>\n      </div>\n      <div className=\"categories-list\">\n        {menu?.categories.map((category: ICategory, index) => (\n          <a\n            key={index}\n            href={`#${(category.name as IMultiLanguageString)[\n              Languages.ENGLISH\n            ]?.toLowerCase()}`}\n          >\n            <div\n              className=\"category-selector\"\n              style={{\n                backgroundImage: `linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.4)), url(${\n                  images?.[category.image]\n                })`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n              }}\n            >\n              {(category.name as IMultiLanguageString)[language]}\n            </div>\n          </a>\n        ))}\n      </div>\n      <div className=\"menu-section\">\n        {menu?.categories.map((category, index) => (\n          <div key={index}>\n            <a\n              key={index}\n              id={`${(category.name as IMultiLanguageString)[\n                Languages.ENGLISH\n              ]?.toLowerCase()}`}\n              href={`#${(category.name as IMultiLanguageString)[\n                Languages.ENGLISH\n              ]?.toLowerCase()}`}\n            >\n              <h1>{(category.name as IMultiLanguageString)[language]}</h1>\n            </a>\n            <table className=\"menu-items\">\n              <tbody>\n                {category.items.map(({ number, name, price }, index) => (\n                  <tr key={index}>\n                    <td className=\"item-number\">{number}</td>\n                    <td className=\"item-name\">\n                      {(name as IMultiLanguageString)[language]}\n                    </td>\n                    <td className=\"item-price\">{price}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { useEffect, useState } from 'react';\nimport Banner from '../Banner/Banner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ICategory, IEntree, IMenu } from '../../types/types';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport './Menu.css';\n\nconst TakeoutMenu = (props: {\n  menu?: IMenu;\n  pdf?: string;\n  images?: { [key: string]: string };\n}) => {\n  const { menu, pdf, images } = props;\n  const [showBannerOnMobile, setShowBannerOnMobile] = useState(false);\n\n  useEffect(() => {\n    document.title = 'Takeout Menu | Emerald Palace';\n  }, []);\n\n  return (\n    <div className=\"menu\">\n      <Banner\n        className={showBannerOnMobile ? 'show' : ''}\n        discounts={menu?.discounts}\n      />\n      <div className=\"options\">\n        <button\n          className=\"deals-toggle\"\n          onClick={() => setShowBannerOnMobile(!showBannerOnMobile)}\n        >\n          Deals\n        </button>\n        <a href={pdf} target=\"_blank\" rel=\"noopener noreferrer\">\n          <button>\n            <FontAwesomeIcon icon={faExternalLinkAlt} /> PDF\n          </button>\n        </a>\n      </div>\n      <div className=\"categories-list\">\n        {menu?.categories.map((category: ICategory, index) => (\n          <a key={index} href={`#${category.name}`}>\n            <div\n              className=\"category-selector\"\n              style={{\n                backgroundImage: `linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.4)), url(${\n                  images?.[category.image]\n                })`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n              }}\n            >\n              {category.name}\n            </div>\n          </a>\n        ))}\n      </div>\n      <div className=\"menu-section\">\n        {menu?.categories.map((category, index) => (\n          <div key={index}>\n            <a id={`${category.name}`} href={`#${category.name}`}>\n              <h1>{category.name}</h1>\n            </a>\n            <table className=\"menu-items\">\n              <tbody>\n                {category.name === 'Soup' && (\n                  <tr>\n                    <td></td>\n                    <td></td>\n                    <td className=\"item-price\">Small</td>\n                    <td className=\"item-price\">Large</td>\n                  </tr>\n                )}\n                {category.items.map(\n                  ({ number, name, description, price }, index) => (\n                    <tr key={index}>\n                      {number && <td className=\"item-number\">{number}</td>}\n                      <td className=\"item-name\">\n                        <div>{name}</div>\n                        <div className=\"item-description\">{description}</div>\n                      </td>\n                      {typeof price === 'string' ? (\n                        <td className=\"item-price\">{price}</td>\n                      ) : (\n                        price.map((p, index) => (\n                          <td key={index} className=\"item-price\">\n                            {p}\n                          </td>\n                        ))\n                      )}\n                    </tr>\n                  )\n                )}\n              </tbody>\n            </table>\n            {category?.name === 'Dinner Specials' && (\n              <>\n                <h2>Entrées</h2>\n                <table className=\"menu-items\">\n                  <tbody>\n                    {category?.entrees?.map((entree: IEntree, index) => (\n                      <tr key={index}>\n                        <td className=\"item-number\">{entree.number}</td>\n                        <td className=\"item-name\">{entree.name}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TakeoutMenu;\n","import React, { useRef, useEffect } from 'react';\nimport './Contact.css';\nimport { Location } from '../../types/types';\nimport { IRestaurant } from '../../types/types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapPin, faPhone, faClock } from '@fortawesome/free-solid-svg-icons';\n\ndeclare global {\n  interface Window {\n    google: typeof google;\n  }\n}\n\nconst GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\n\nconst Contact = (props: { restaurant?: IRestaurant }) => {\n  const { restaurant } = props;\n  let googleMapRef = useRef<HTMLDivElement>(null);\n  let googleMap = useRef<google.maps.Map>();\n  let marker = useRef<google.maps.Marker>();\n\n  useEffect(() => {\n    const restaurantLocation: Location = { lat: 51.098501, lng: -113.962162 };\n    const createGoogleMap = () =>\n      new window.google.maps.Map(googleMapRef.current as Element, {\n        zoom: 16,\n        center: restaurantLocation,\n        disableDefaultUI: true,\n      });\n\n    const createMarker = () =>\n      new window.google.maps.Marker({\n        position: restaurantLocation,\n        map: googleMap.current,\n      });\n\n    const googleMapScript = document.createElement('script');\n\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAP_API_KEY}`;\n    window.document.body.appendChild(googleMapScript);\n\n    googleMapScript.addEventListener('load', () => {\n      googleMap.current = createGoogleMap();\n      marker.current = createMarker();\n    });\n\n    return () => {\n      window.document.body.removeChild(googleMapScript);\n      googleMapScript.removeEventListener('load', () => {\n        googleMap.current = createGoogleMap();\n        marker.current = createMarker();\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    document.title = 'Contact | Emerald Palace';\n  }, []);\n\n  return (\n    <div className=\"contact\">\n      <h1>CONTACT US</h1>\n      <div className=\"container\">\n        <div className=\"contact-info\">\n          <section className=\"location\">\n            <h2>\n              <FontAwesomeIcon icon={faMapPin} /> Location\n            </h2>\n            <a href={restaurant?.location.href}>\n              {restaurant?.location.address}\n            </a>\n          </section>\n          <section className=\"phone\">\n            <h2>\n              <FontAwesomeIcon icon={faPhone} /> Phone\n            </h2>\n            <a href={restaurant?.phone.href}>{restaurant?.phone.label}</a>\n          </section>\n          <section className=\"hours\">\n            <h2>\n              <FontAwesomeIcon icon={faClock} /> Hours\n            </h2>\n            <table>\n              <tbody>\n                {restaurant?.hours.map((item, index) => (\n                  <tr key={index}>\n                    <td className=\"day\">{item.day}</td>\n                    <td>{item.hours}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </section>\n        </div>\n        <div className=\"google-map\" ref={googleMapRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import firebase from '@firebase/app';\nimport '@firebase/storage';\n\nexport default class FirebaseHelper {\n  private _storage = firebase.storage!();\n  private _storageRef = this._storage.ref();\n\n  public getDownloadUrl = (file: string) => {\n    try {\n      return this._storageRef.child(file).getDownloadURL();\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  public getJson = async (file: string) => {\n    try {\n      const url = await this.getDownloadUrl(file);\n      const res = await fetch(url);\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    } catch (err) {\n      throw err;\n    }\n  };\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\nimport './Loading.css';\n\nconst Loading = () => (\n  <div className=\"loading\">\n    <FontAwesomeIcon icon={faCircleNotch} className=\"fa-spin\" size=\"5x\" />\n  </div>\n);\n\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport Menu from './components/Menu/Menu';\nimport TakeoutMenu from './components/Menu/TakeoutMenu';\nimport Contact from './components/Contact/Contact';\nimport FirebaseHelper from './FirebaseHelper';\nimport { IMenu, IRestaurant, ICategory } from './types/types';\nimport Loading from './components/Loading/Loading';\nimport './App.css';\n\nfunction App() {\n  const [ready, setReady] = useState(false);\n  const [menu, setMenu] = useState<IMenu>();\n  const [menuPdfUrl, setMenuPdfUrl] = useState<string>();\n  const [images, setImages] = useState<{ [key: string]: string }>({});\n  const [takeoutMenu, setTakeoutMenu] = useState<IMenu>();\n  const [takeoutMenuPdfUrl, setTakeoutMenuPdfUrl] = useState<string>();\n  const [restaurant, setRestaurant] = useState<IRestaurant>();\n  const [backgroundUrl, setBackgroundUrl] = useState<string>();\n\n  useEffect(() => {\n    const filePaths = {\n      menuJson: 'menu.json',\n      menuPdf: 'pdfs/traditional-menu.pdf',\n      takeoutMenuJson: 'takeout-menu.json',\n      takeoutMenuPdf: 'pdfs/takeout-menu.pdf',\n      restaurantJson: 'restaurant.json',\n      backgroundImage: 'images/background.jpg',\n    };\n\n    const getAllFiles = async () => {\n      const fh = new FirebaseHelper();\n      try {\n        const menuJson = await fh.getJson(filePaths.menuJson);\n        setMenu(menuJson);\n      } catch (err) {\n        console.error(err);\n      }\n      try {\n        const menuPdf = await fh.getDownloadUrl(filePaths.menuPdf);\n        setMenuPdfUrl(menuPdf);\n      } catch (err) {\n        console.error(err);\n      }\n      try {\n        const takeoutMenuJson = await fh.getJson(filePaths.takeoutMenuJson);\n        setTakeoutMenu(takeoutMenuJson);\n      } catch (err) {\n        console.error(err);\n      }\n      try {\n        const takeoutMenuPdf = await fh.getDownloadUrl(\n          filePaths.takeoutMenuPdf\n        );\n        setTakeoutMenuPdfUrl(takeoutMenuPdf);\n      } catch (err) {\n        console.error(err);\n      }\n      try {\n        const restaurantJson = await fh.getJson(filePaths.restaurantJson);\n        setRestaurant(restaurantJson);\n      } catch (err) {\n        console.error(err);\n      }\n      try {\n        const background = await fh.getDownloadUrl(filePaths.backgroundImage);\n        setBackgroundUrl(background);\n      } catch (err) {\n        console.error(err);\n      }\n      setReady(true);\n    };\n    getAllFiles();\n  }, []);\n\n  useEffect(() => {\n    const getImagesFromMenuJson = async () => {\n      const fh = new FirebaseHelper();\n      const updateImageMap = async (category: ICategory) => {\n        try {\n          const imageUrl = await fh.getDownloadUrl(category.image);\n          setImages((prev) => {\n            return { ...prev, [category.image]: imageUrl };\n          });\n        } catch (err) {\n          console.error(err);\n        }\n      };\n      menu?.categories.forEach(updateImageMap);\n      takeoutMenu?.categories.forEach(updateImageMap);\n    };\n    try {\n      getImagesFromMenuJson();\n    } catch (err) {\n      console.error(err);\n    }\n  }, [menu, takeoutMenu]);\n\n  return (\n    <Router>\n      {ready ? (\n        <div className=\"app\">\n          <Navbar />\n          <div className=\"main\">\n            <Switch>\n              <Route path=\"/menu\">\n                <Menu menu={menu} pdf={menuPdfUrl} images={images} />\n              </Route>\n              <Route path=\"/takeout-menu\">\n                <TakeoutMenu\n                  menu={takeoutMenu}\n                  pdf={takeoutMenuPdfUrl}\n                  images={images}\n                />\n              </Route>\n              <Route path=\"/contact\">\n                <Contact restaurant={restaurant} />\n              </Route>\n              <Route path=\"/\">\n                <Home restaurant={restaurant} background={backgroundUrl} />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from '@firebase/app';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBjW99VqW_fOjdU_FYF4LTKtGjVwMHL_D4',\n  authDomain: 'emerald-palace.firebaseapp.com',\n  databaseURL: 'https://emerald-palace.firebaseio.com',\n  projectId: 'emerald-palace',\n  storageBucket: 'emerald-palace.appspot.com',\n  messagingSenderId: '191665058142',\n  appId: '1:191665058142:web:37ced95f2e8fddad925fcf',\n  measurementId: 'G-M7NVVWXQD9',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}