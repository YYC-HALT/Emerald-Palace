{"version":3,"sources":["types/types.ts","components/Navbar/Navbar.tsx","components/Home/Home.tsx","components/Banner/Banner.tsx","components/Menu/Menu.tsx","components/Menu/TakeoutMenu.tsx","components/Contact/Contact.tsx","storageRetriever.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Languages","Navbar","useState","open","setOpen","navbarRef","useRef","useEffect","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","ref","className","onClick","icon","faBars","size","navbar","map","item","index","key","to","route","name","Home","props","restaurant","title","zh","en","toUpperCase","description","href","location","address","phone","label","Banner","tooltipHidden","setTooltipHidden","show","setShow","message","tooltipMessages","toggleTooltip","onMouseEnter","onMouseLeave","faInfoCircle","Menu","menu","ENGLISH","language","setLanguage","showBanner","setShowBanner","activeCategory","setActiveCategory","sliderRef","images","setImages","scroll","amount","scrollTo","left","scrollLeft","behavior","categories","getImagesFromMenuJson","a","storage","firebase","storageRef","forEach","category","child","image","getDownloadURL","imageUrl","err","console","error","delivery","discounts","CHINESE","VIETNAMESE","faChevronLeft","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","faChevronRight","items","number","price","TakeoutMenu","some","Array","isArray","p","entrees","entree","Contact","googleMapRef","googleMap","marker","restaurantLocation","lat","lng","createGoogleMap","window","google","maps","Map","zoom","center","disableDefaultUI","createMarker","Marker","position","googleMapScript","createElement","src","process","body","appendChild","removeChild","split","line","hours","day","storageRetriever","fileName","storageUrl","fetch","res","json","App","setMenu","takeoutMenu","setTakeoutMenu","setRestaurant","menuJson","takeoutMenuJson","restaurantJson","getAllFiles","basename","path","Boolean","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8933d179.chunk.js","sourcesContent":["export interface ICategory {\n  name: string | IMultiLanguageString;\n  image: string;\n  items: IItem[];\n  entrees?: IEntree[];\n  description?: IMultiLanguageString;\n}\n\nexport interface IEntree {\n  number: string;\n  name: string;\n}\n\nexport interface IItem {\n  number?: string;\n  name: string | IMultiLanguageString;\n  description?: string;\n  price: string | string[];\n}\n\nexport interface IMenu {\n  delivery: string;\n  discounts: string[];\n  categories: ICategory[];\n}\n\nexport interface IRestaurant {\n  name: IMultiLanguageString;\n  description: string;\n  location: { address: string; href: string };\n  phone: { label: string; href: string };\n  hours: { day: string; hours: string }[];\n}\n\nexport interface IMultiLanguageString {\n  en: string;\n  zh: string;\n  vi?: string;\n}\n\nexport enum Languages {\n  ENGLISH = 'en',\n  CHINESE = 'zh',\n  VIETNAMESE = 'vi',\n}\n\nexport interface Location {\n  lat: number;\n  lng: number;\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport navbar from './navbar.json';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  const [open, setOpen] = useState(false);\n  const toggleOpen = () => setOpen(!open);\n  const navbarRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClick = (e: UIEvent) => {\n      if (navbarRef.current && !navbarRef.current.contains(e.target as Node)) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClick);\n    document.addEventListener('touchstart', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n      document.removeEventListener('touchstart', handleClick);\n    };\n  }, []);\n\n  return (\n    <div ref={navbarRef} className={`navbar ${open && 'open'}`}>\n      <button className=\"hamburger\" onClick={toggleOpen}>\n        <FontAwesomeIcon icon={faBars} size=\"3x\" />\n      </button>\n      {navbar.map((item, index) => (\n        <Link key={index} to={item.route}>\n          <div className={`nav-item ${open && 'open'}`}>{item.name}</div>\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useEffect } from 'react';\nimport './Home.css';\nimport { IRestaurant } from '../../types/types';\n\nconst Home = (props: { restaurant?: IRestaurant }) => {\n  const { restaurant } = props;\n\n  useEffect(() => {\n    document.title = 'Emerald Palace';\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <div className=\"center\">\n        <div className=\"logo\">\n          <span>{restaurant?.name.zh}</span>\n        </div>\n        <span className=\"name\">{restaurant?.name.en.toUpperCase()}</span>\n        <span className=\"description\">\n          {restaurant?.description.toUpperCase()}\n        </span>\n        <div className=\"contact-info\">\n          <a\n            href={`https://maps.google.com/?q=${restaurant?.location.address}`}\n          >\n            {restaurant?.location.address.toUpperCase()}\n          </a>\n          <a href={`tel:${restaurant?.phone.href}`}>\n            {restaurant?.phone.label}\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport './Banner.css';\n\ninterface IProps {\n  show: boolean;\n  setShow: Dispatch<SetStateAction<boolean>>;\n  message?: string;\n  tooltipMessages?: string[];\n}\n\nconst Banner = (props: IProps) => {\n  const [tooltipHidden, setTooltipHidden] = useState(true);\n  const { show, setShow, message, tooltipMessages } = props;\n\n  const toggleTooltip = () => setTooltipHidden(!tooltipHidden);\n\n  return message ? (\n    <div className={`banner ${!show && 'dismissed'}`}>\n      <div onMouseEnter={toggleTooltip} onMouseLeave={toggleTooltip}>\n        <FontAwesomeIcon icon={faInfoCircle} />\n        <div className={`tooltip ${tooltipHidden && 'hidden'}`}>\n          {tooltipMessages?.map((message, index) => (\n            <li key={index}>{message}</li>\n          ))}\n        </div>\n      </div>\n      <div className=\"message\">{message}</div>\n      <div className=\"close\" onClick={() => setShow(false)}>\n        ✕\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default Banner;\n","import React, { useState, useRef, useEffect } from 'react';\nimport Banner from '../Banner/Banner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  ICategory,\n  IItem,\n  IMenu,\n  IMultiLanguageString,\n  Languages,\n} from '../../types/types';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport './Menu.css';\nimport firebase from '@firebase/app';\nimport '@firebase/storage';\n\nconst Menu = (props: { menu?: IMenu }) => {\n  const { menu } = props;\n  const [language, setLanguage] = useState(Languages.ENGLISH);\n  const [showBanner, setShowBanner] = useState(true);\n  const [activeCategory, setActiveCategory] = useState<ICategory>();\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [images, setImages] = useState<{ [key: string]: string }>({});\n\n  const scroll = (amount: number) =>\n    sliderRef.current?.scrollTo({\n      left: sliderRef.current.scrollLeft + amount,\n      behavior: 'smooth',\n    });\n\n  useEffect(() => {\n    setActiveCategory(menu?.categories[0]);\n  }, [menu]);\n\n  useEffect(() => {\n    document.title = 'Menu | Emerald Palace';\n  }, []);\n\n  useEffect(() => {\n    const getImagesFromMenuJson = async () => {\n      const storage = firebase.storage!();\n      const storageRef = storage.ref();\n      menu?.categories.forEach(async (category) => {\n        const imageUrl = await storageRef\n          .child(category.image)\n          .getDownloadURL();\n        setImages((images) => {\n          return { ...images, [category.image]: imageUrl };\n        });\n      });\n    };\n    try {\n      getImagesFromMenuJson();\n    } catch (err) {\n      console.error(err);\n    }\n  }, [menu]);\n\n  return (\n    <div className={`menu ${showBanner && 'lower'}`}>\n      <Banner\n        show={showBanner}\n        setShow={setShowBanner}\n        message={menu?.delivery}\n        tooltipMessages={menu?.discounts}\n      />\n      <div className=\"languages\">\n        <button\n          className={`${language === Languages.ENGLISH && 'active'}`}\n          onClick={() => setLanguage(Languages.ENGLISH)}\n        >\n          English\n        </button>\n        <button\n          className={`${language === Languages.CHINESE && 'active'}`}\n          onClick={() => setLanguage(Languages.CHINESE)}\n        >\n          繁體中文\n        </button>\n        <button\n          className={`${language === Languages.VIETNAMESE && 'active'}`}\n          onClick={() => setLanguage(Languages.VIETNAMESE)}\n        >\n          Tiếng Việt\n        </button>\n      </div>\n      <div className=\"slider-container\">\n        <div className=\"left\" onClick={() => scroll(-500)}>\n          <FontAwesomeIcon icon={faChevronLeft} size=\"lg\" />\n        </div>\n        <div ref={sliderRef} className=\"slider\">\n          {menu?.categories.map((category: ICategory, index) => {\n            return (\n              <div\n                key={index}\n                className=\"category\"\n                style={{\n                  backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${\n                    images[category.image]\n                  })`,\n                  backgroundPosition: 'center',\n                  backgroundSize: 'cover',\n                  backgroundRepeat: 'no-repeat',\n                }}\n                onClick={() => setActiveCategory(category)}\n              >\n                <span>{(category.name as IMultiLanguageString)[language]}</span>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"right\" onClick={() => scroll(500)}>\n          <FontAwesomeIcon icon={faChevronRight} size=\"lg\" />\n        </div>\n      </div>\n      <div className=\"active-category\">\n        <div className=\"flex row\">\n          {activeCategory && (\n            <h1>{(activeCategory?.name as IMultiLanguageString)[language]}</h1>\n          )}\n        </div>\n        {activeCategory?.description && (\n          <div className=\"description\">\n            <span>{activeCategory?.description[language]}</span>\n          </div>\n        )}\n        <table>\n          <tbody>\n            {activeCategory?.items.map(\n              ({ number, name, price }: IItem, index) => (\n                <tr key={index}>\n                  <td className=\"number\">{number}</td>\n                  <td className=\"name\">\n                    <span>{(name as IMultiLanguageString)[language]}</span>\n                  </td>\n                  <td className=\"price\">{price}</td>\n                </tr>\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { useState, useRef, useEffect } from 'react';\nimport Banner from '../Banner/Banner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ICategory, IEntree, IItem, IMenu } from '../../types/types';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport './Menu.css';\nimport firebase from '@firebase/app';\nimport '@firebase/storage';\n\nconst TakeoutMenu = (props: { menu?: IMenu }) => {\n  const { menu } = props;\n  const [showBanner, setShowBanner] = useState(true);\n  const [activeCategory, setActiveCategory] = useState<ICategory>();\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [images, setImages] = useState<{ [key: string]: string }>({});\n\n  const scroll = (amount: number) =>\n    sliderRef.current?.scrollTo({\n      left: sliderRef.current.scrollLeft + amount,\n      behavior: 'smooth',\n    });\n\n  useEffect(() => {\n    document.title = 'Takeout Menu | Emerald Palace';\n  }, []);\n\n  useEffect(() => {\n    setActiveCategory(menu?.categories[0]);\n  }, [menu]);\n\n  useEffect(() => {\n    const getImagesFromMenuJson = async () => {\n      const storage = firebase.storage!();\n      const storageRef = storage.ref();\n      menu?.categories.forEach(async (category) => {\n        const imageUrl = await storageRef\n          .child(category.image)\n          .getDownloadURL();\n        setImages((images) => {\n          return { ...images, [category.image]: imageUrl };\n        });\n      });\n    };\n    try {\n      getImagesFromMenuJson();\n    } catch (err) {\n      console.error(err);\n    }\n  }, [menu]);\n\n  return (\n    <div className={`menu ${showBanner && 'lower'}`}>\n      <Banner\n        show={showBanner}\n        setShow={setShowBanner}\n        message={menu?.delivery}\n        tooltipMessages={menu?.discounts}\n      ></Banner>\n      <div className=\"slider-container\">\n        <div className=\"left\" onClick={() => scroll(-300)}>\n          <FontAwesomeIcon icon={faChevronLeft} size=\"lg\" />\n        </div>\n        <div ref={sliderRef} className=\"slider\">\n          {menu?.categories.map((category: ICategory, index) => (\n            <div\n              key={index}\n              className=\"category\"\n              style={{\n                backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${\n                  images[category.image]\n                })`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n              }}\n              onClick={() => setActiveCategory(category)}\n            >\n              {category.name}\n            </div>\n          ))}\n        </div>\n        <div className=\"right\" onClick={() => scroll(300)}>\n          <FontAwesomeIcon icon={faChevronRight} size=\"lg\" />\n        </div>\n      </div>\n      <div className=\"active-category\">\n        <h1>{activeCategory?.name}</h1>\n        <table>\n          <tbody>\n            {activeCategory?.items.some((item) =>\n              Array.isArray(item.price)\n            ) && (\n              <tr>\n                <th></th>\n                <th></th>\n                <th>Small</th>\n                <th>Large</th>\n              </tr>\n            )}\n            {activeCategory?.items.map((item: IItem, index) => (\n              <tr key={index}>\n                {item.number && <td className=\"number\">{item.number}</td>}\n                <td className=\"name\">\n                  <div>\n                    <div>{item.name}</div>\n                    <div className=\"description\">{item.description}</div>\n                  </div>\n                </td>\n                {Array.isArray(item.price) ? (\n                  item.price.map((p, index) => <td key={index}>{p}</td>)\n                ) : (\n                  <td className=\"price\">{item.price}</td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {activeCategory?.name === 'Dinner Specials' && (\n          <>\n            <h1>Entrées</h1>\n            <table>\n              <tbody>\n                {activeCategory?.entrees?.map((entree: IEntree, index) => (\n                  <tr key={index}>\n                    <td>{entree.number}</td>\n                    <td>{entree.name}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TakeoutMenu;\n","import React, { useRef, useEffect } from 'react';\nimport './Contact.css';\nimport { Location } from '../../types/types';\nimport { IRestaurant } from '../../types/types';\n\ndeclare global {\n  interface Window {\n    google: typeof google;\n  }\n}\n\nconst GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\n\nconst Contact = (props: { restaurant?: IRestaurant }) => {\n  const { restaurant } = props;\n  let googleMapRef = useRef<HTMLDivElement>(null);\n  let googleMap = useRef<google.maps.Map>();\n  let marker = useRef<google.maps.Marker>();\n\n  useEffect(() => {\n    const restaurantLocation: Location = { lat: 51.098501, lng: -113.962162 };\n    const createGoogleMap = () =>\n      new window.google.maps.Map(googleMapRef.current as Element, {\n        zoom: 16,\n        center: restaurantLocation,\n        disableDefaultUI: true,\n      });\n\n    const createMarker = () =>\n      new window.google.maps.Marker({\n        position: restaurantLocation,\n        map: googleMap.current,\n      });\n\n    const googleMapScript = document.createElement('script');\n\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAP_API_KEY}`;\n    window.document.body.appendChild(googleMapScript);\n\n    googleMapScript.addEventListener('load', () => {\n      googleMap.current = createGoogleMap();\n      marker.current = createMarker();\n    });\n\n    return () => {\n      window.document.body.removeChild(googleMapScript);\n      googleMapScript.removeEventListener('load', () => {\n        googleMap.current = createGoogleMap();\n        marker.current = createMarker();\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    document.title = 'Contact | Emerald Palace';\n  }, []);\n\n  return (\n    <div className=\"contact\">\n      <h2>CONTACT US</h2>\n      <div className=\"desktop\">\n        <div className=\"google-map\" ref={googleMapRef} />\n        <div className=\"contact-info\">\n          <div className=\"section\">\n            <h3>LOCATION</h3>\n            <a href={restaurant?.location.href}>\n              {restaurant?.location.address.split(',').map((line, index) => (\n                <span key={index} className=\"address\">\n                  {line}\n                </span>\n              ))}\n            </a>\n          </div>\n          <div className=\"section\">\n            <h3>PHONE</h3>\n            <a href={restaurant?.phone.href}>{restaurant?.phone.label}</a>\n          </div>\n          <div className=\"section\">\n            <h3>HOURS</h3>\n            <div className=\"times\">\n              <ul className=\"days\">\n                {restaurant?.hours.map((item, index) => (\n                  <li key={index}>{item.day}</li>\n                ))}\n              </ul>\n              <ul className=\"hours\">\n                {restaurant?.hours.map((item, index) => (\n                  <li key={index}>{item.hours}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import firebase from '@firebase/app';\nimport '@firebase/storage';\n\nconst storageRetriever = async (fileName: string) => {\n  try {\n    const storage = firebase.storage!();\n    const storageRef = storage.ref();\n    const storageUrl = await storageRef.child(fileName).getDownloadURL();\n    const res = await fetch(storageUrl);\n    return res.json();\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default storageRetriever;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport Menu from './components/Menu/Menu';\nimport TakeoutMenu from './components/Menu/TakeoutMenu';\nimport Contact from './components/Contact/Contact';\nimport './App.css';\nimport storageRetriever from './storageRetriever';\nimport { IMenu, IRestaurant } from './types/types';\n\nfunction App() {\n  const [menu, setMenu] = useState<IMenu>();\n  const [takeoutMenu, setTakeoutMenu] = useState<IMenu>();\n  const [restaurant, setRestaurant] = useState<IRestaurant>();\n\n  useEffect(() => {\n    const getAllFiles = async () => {\n      const menuJson = await storageRetriever('menu.json');\n      const takeoutMenuJson = await storageRetriever('takeout-menu.json');\n      const restaurantJson = await storageRetriever('restaurant.json');\n      setMenu(menuJson);\n      setTakeoutMenu(takeoutMenuJson);\n      setRestaurant(restaurantJson);\n    };\n    getAllFiles();\n  }, []);\n\n  return (\n    <Router basename=\"/Emerald-Palace/\">\n      <div className=\"app\">\n        <Navbar />\n        <div className=\"main\">\n          <Switch>\n            <Route path=\"/menu\">\n              <Menu menu={menu} />\n            </Route>\n            <Route path=\"/takeout-menu\">\n              <TakeoutMenu menu={takeoutMenu} />\n            </Route>\n            <Route path=\"/contact\">\n              <Contact restaurant={restaurant} />\n            </Route>\n            <Route path=\"/\">\n              <Home restaurant={restaurant} />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from '@firebase/app';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBjW99VqW_fOjdU_FYF4LTKtGjVwMHL_D4',\n  authDomain: 'emerald-palace.firebaseapp.com',\n  databaseURL: 'https://emerald-palace.firebaseio.com',\n  projectId: 'emerald-palace',\n  storageBucket: 'emerald-palace.appspot.com',\n  messagingSenderId: '191665058142',\n  appId: '1:191665058142:web:37ced95f2e8fddad925fcf',\n  measurementId: 'G-M7NVVWXQD9',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}